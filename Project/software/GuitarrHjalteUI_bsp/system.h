/*
 * system.h - SOPC Builder system and BSP software package information
 *
 * Machine generated for CPU 'cpu' in SOPC Builder design 'VGAProc'
 * SOPC Builder design path: ../../VGAProc.sopcinfo
 *
 * Generated: Tue Jun 01 12:57:12 CEST 2010
 */

/*
 * DO NOT MODIFY THIS FILE
 *
 * Changing this file will have subtle consequences
 * which will almost certainly lead to a nonfunctioning
 * system. If you do modify this file, be aware that your
 * changes will be overwritten and lost when this file
 * is generated again.
 *
 * DO NOT MODIFY THIS FILE
 */

/*
 * License Agreement
 *
 * Copyright (c) 2008
 * Altera Corporation, San Jose, California, USA.
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * This agreement shall be governed in all respects by the laws of the State
 * of California and by the laws of the United States of America.
 */

#ifndef __SYSTEM_H_
#define __SYSTEM_H_

/* Include definitions from linker script generator */
#include "linker.h"


/*
 * Altera_UP_Flash_Memory_IP_Core_Avalon_Interface_0_flash_data configuration
 *
 */

#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_DATA_BASE 0x800000
#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_DATA_IRQ -1
#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_DATA_IRQ_INTERRUPT_CONTROLLER_ID -1
#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_DATA_NAME "/dev/Altera_UP_Flash_Memory_IP_Core_Avalon_Interface_0_flash_data"
#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_DATA_SPAN 4194304
#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_DATA_TYPE "Altera_UP_Flash_Memory_IP_Core_Avalon_Interface"
#define ALT_MODULE_CLASS_Altera_UP_Flash_Memory_IP_Core_Avalon_Interface_0_flash_data Altera_UP_Flash_Memory_IP_Core_Avalon_Interface


/*
 * Altera_UP_Flash_Memory_IP_Core_Avalon_Interface_0_flash_erase_control configuration
 *
 */

#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_ERASE_CONTROL_BASE 0xd031f8
#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_ERASE_CONTROL_IRQ -1
#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_ERASE_CONTROL_IRQ_INTERRUPT_CONTROLLER_ID -1
#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_ERASE_CONTROL_NAME "/dev/Altera_UP_Flash_Memory_IP_Core_Avalon_Interface_0_flash_erase_control"
#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_ERASE_CONTROL_SPAN 4
#define ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE_0_FLASH_ERASE_CONTROL_TYPE "Altera_UP_Flash_Memory_IP_Core_Avalon_Interface"
#define ALT_MODULE_CLASS_Altera_UP_Flash_Memory_IP_Core_Avalon_Interface_0_flash_erase_control Altera_UP_Flash_Memory_IP_Core_Avalon_Interface


/*
 * CPU configuration
 *
 */

#define NIOS2_BIG_ENDIAN 0
#define NIOS2_BREAK_ADDR 0xd02820
#define NIOS2_CPU_FREQ 50000000u
#define NIOS2_CPU_ID_SIZE 1
#define NIOS2_CPU_ID_VALUE 0x0
#define NIOS2_CPU_IMPLEMENTATION "fast"
#define NIOS2_DATA_ADDR_WIDTH 24
#define NIOS2_DCACHE_LINE_SIZE 0
#define NIOS2_DCACHE_LINE_SIZE_LOG2 0
#define NIOS2_DCACHE_SIZE 0
#define NIOS2_EXCEPTION_ADDR 0xc80020
#define NIOS2_FLUSHDA_SUPPORTED
#define NIOS2_HARDWARE_DIVIDE_PRESENT 0
#define NIOS2_HARDWARE_MULTIPLY_PRESENT 1
#define NIOS2_HARDWARE_MULX_PRESENT 0
#define NIOS2_HAS_DEBUG_CORE 1
#define NIOS2_HAS_DEBUG_STUB
#define NIOS2_HAS_JMPI_INSTRUCTION
#define NIOS2_ICACHE_LINE_SIZE 32
#define NIOS2_ICACHE_LINE_SIZE_LOG2 5
#define NIOS2_ICACHE_SIZE 4096
#define NIOS2_INST_ADDR_WIDTH 24
#define NIOS2_NUM_OF_SHADOW_REG_SETS 0
#define NIOS2_RESET_ADDR 0xc80000


/*
 * Custom instruction macros
 *
 */

#define ALT_CI_FPOINT(n,A,B) __builtin_custom_inii(ALT_CI_FPOINT_N+(n&ALT_CI_FPOINT_N_MASK),(A),(B))
#define ALT_CI_FPOINT_N 0xfc
#define ALT_CI_FPOINT_N_MASK ((1<<2)-1)


/*
 * Define for each module class mastered by the CPU
 *
 */

#define __ALTERA_AVALON_JTAG_UART
#define __ALTERA_AVALON_NEW_SDRAM_CONTROLLER
#define __ALTERA_AVALON_PIO
#define __ALTERA_NIOS2
#define __ALTERA_NIOS_CUSTOM_INSTR_FLOATING_POINT
#define __ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG
#define __ALTERA_UP_AVALON_CHARACTER_BUFFER
#define __ALTERA_UP_AVALON_PIXEL_BUFFER
#define __ALTERA_UP_AVALON_PS2
#define __ALTERA_UP_AVALON_SRAM
#define __ALTERA_UP_FLASH_MEMORY_IP_CORE_AVALON_INTERFACE
#define __ANALYZER_INPUT


/*
 * System configuration
 *
 */

#define ALT_CPU_ARCHITECTURE "altera_nios2"
#define ALT_CPU_FREQ 50000000
#define ALT_CPU_NAME "cpu"
#define ALT_DEVICE_FAMILY "CYCLONEII"
#define ALT_IRQ_BASE NULL
#define ALT_LEGACY_INTERRUPT_API_PRESENT
#define ALT_LOG_PORT "/dev/null"
#define ALT_LOG_PORT_BASE 0x0
#define ALT_LOG_PORT_DEV null
#define ALT_LOG_PORT_TYPE ""
#define ALT_NUM_EXTERNAL_INTERRUPT_CONTROLLERS 0
#define ALT_NUM_INTERNAL_INTERRUPT_CONTROLLERS 1
#define ALT_NUM_INTERRUPT_CONTROLLERS 1
#define ALT_STDERR "/dev/jtag_uart"
#define ALT_STDERR_BASE 0xd031e8
#define ALT_STDERR_DEV jtag_uart
#define ALT_STDERR_PRESENT
#define ALT_STDERR_TYPE "altera_avalon_jtag_uart"
#define ALT_STDIN "/dev/jtag_uart"
#define ALT_STDIN_BASE 0xd031e8
#define ALT_STDIN_DEV jtag_uart
#define ALT_STDIN_PRESENT
#define ALT_STDIN_TYPE "altera_avalon_jtag_uart"
#define ALT_STDOUT "/dev/jtag_uart"
#define ALT_STDOUT_BASE 0xd031e8
#define ALT_STDOUT_DEV jtag_uart
#define ALT_STDOUT_PRESENT
#define ALT_STDOUT_TYPE "altera_avalon_jtag_uart"
#define ALT_SYSTEM_NAME "VGAProc"


/*
 * altera_extended_hal_bsp configuration
 *
 */

#define ALT_MAX_FD 32
#define ALT_SYS_CLK none
#define ALT_TIMESTAMP_CLK none


/*
 * analyzer_input_left configuration
 *
 */

#define ALT_MODULE_CLASS_analyzer_input_left analyzer_input
#define ANALYZER_INPUT_LEFT_BASE 0xd03190
#define ANALYZER_INPUT_LEFT_IRQ -1
#define ANALYZER_INPUT_LEFT_IRQ_INTERRUPT_CONTROLLER_ID -1
#define ANALYZER_INPUT_LEFT_NAME "/dev/analyzer_input_left"
#define ANALYZER_INPUT_LEFT_SPAN 16
#define ANALYZER_INPUT_LEFT_TYPE "analyzer_input"


/*
 * analyzer_input_right configuration
 *
 */

#define ALT_MODULE_CLASS_analyzer_input_right analyzer_input
#define ANALYZER_INPUT_RIGHT_BASE 0xd031b0
#define ANALYZER_INPUT_RIGHT_IRQ -1
#define ANALYZER_INPUT_RIGHT_IRQ_INTERRUPT_CONTROLLER_ID -1
#define ANALYZER_INPUT_RIGHT_NAME "/dev/analyzer_input_right"
#define ANALYZER_INPUT_RIGHT_SPAN 16
#define ANALYZER_INPUT_RIGHT_TYPE "analyzer_input"


/*
 * audio_and_video_config_0 configuration
 *
 */

#define ALT_MODULE_CLASS_audio_and_video_config_0 altera_up_avalon_audio_and_video_config
#define AUDIO_AND_VIDEO_CONFIG_0_BASE 0xd03000
#define AUDIO_AND_VIDEO_CONFIG_0_IRQ -1
#define AUDIO_AND_VIDEO_CONFIG_0_IRQ_INTERRUPT_CONTROLLER_ID -1
#define AUDIO_AND_VIDEO_CONFIG_0_NAME "/dev/audio_and_video_config_0"
#define AUDIO_AND_VIDEO_CONFIG_0_SPAN 32
#define AUDIO_AND_VIDEO_CONFIG_0_TYPE "altera_up_avalon_audio_and_video_config"


/*
 * character_buffer_avalon_char_buffer_slave configuration
 *
 */

#define ALT_MODULE_CLASS_character_buffer_avalon_char_buffer_slave altera_up_avalon_character_buffer
#define CHARACTER_BUFFER_AVALON_CHAR_BUFFER_SLAVE_BASE 0xd00000
#define CHARACTER_BUFFER_AVALON_CHAR_BUFFER_SLAVE_IRQ -1
#define CHARACTER_BUFFER_AVALON_CHAR_BUFFER_SLAVE_IRQ_INTERRUPT_CONTROLLER_ID -1
#define CHARACTER_BUFFER_AVALON_CHAR_BUFFER_SLAVE_NAME "/dev/character_buffer_avalon_char_buffer_slave"
#define CHARACTER_BUFFER_AVALON_CHAR_BUFFER_SLAVE_SPAN 8192
#define CHARACTER_BUFFER_AVALON_CHAR_BUFFER_SLAVE_TYPE "altera_up_avalon_character_buffer"


/*
 * character_buffer_avalon_char_control_slave configuration
 *
 */

#define ALT_MODULE_CLASS_character_buffer_avalon_char_control_slave altera_up_avalon_character_buffer
#define CHARACTER_BUFFER_AVALON_CHAR_CONTROL_SLAVE_BASE 0xd031e0
#define CHARACTER_BUFFER_AVALON_CHAR_CONTROL_SLAVE_IRQ -1
#define CHARACTER_BUFFER_AVALON_CHAR_CONTROL_SLAVE_IRQ_INTERRUPT_CONTROLLER_ID -1
#define CHARACTER_BUFFER_AVALON_CHAR_CONTROL_SLAVE_NAME "/dev/character_buffer_avalon_char_control_slave"
#define CHARACTER_BUFFER_AVALON_CHAR_CONTROL_SLAVE_SPAN 8
#define CHARACTER_BUFFER_AVALON_CHAR_CONTROL_SLAVE_TYPE "altera_up_avalon_character_buffer"


/*
 * jtag_uart configuration
 *
 */

#define ALT_MODULE_CLASS_jtag_uart altera_avalon_jtag_uart
#define JTAG_UART_BASE 0xd031e8
#define JTAG_UART_IRQ 0
#define JTAG_UART_IRQ_INTERRUPT_CONTROLLER_ID 0
#define JTAG_UART_NAME "/dev/jtag_uart"
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_SPAN 8
#define JTAG_UART_TYPE "altera_avalon_jtag_uart"
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8


/*
 * pio_bitcrusher_bypass configuration
 *
 */

#define ALT_MODULE_CLASS_pio_bitcrusher_bypass altera_avalon_pio
#define PIO_BITCRUSHER_BYPASS_BASE 0xd030f0
#define PIO_BITCRUSHER_BYPASS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_BITCRUSHER_BYPASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_BITCRUSHER_BYPASS_CAPTURE 0
#define PIO_BITCRUSHER_BYPASS_DATA_WIDTH 1
#define PIO_BITCRUSHER_BYPASS_DO_TEST_BENCH_WIRING 0
#define PIO_BITCRUSHER_BYPASS_DRIVEN_SIM_VALUE 0x0
#define PIO_BITCRUSHER_BYPASS_EDGE_TYPE "NONE"
#define PIO_BITCRUSHER_BYPASS_FREQ 50000000u
#define PIO_BITCRUSHER_BYPASS_HAS_IN 0
#define PIO_BITCRUSHER_BYPASS_HAS_OUT 1
#define PIO_BITCRUSHER_BYPASS_HAS_TRI 0
#define PIO_BITCRUSHER_BYPASS_IRQ -1
#define PIO_BITCRUSHER_BYPASS_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_BITCRUSHER_BYPASS_IRQ_TYPE "NONE"
#define PIO_BITCRUSHER_BYPASS_NAME "/dev/pio_bitcrusher_bypass"
#define PIO_BITCRUSHER_BYPASS_RESET_VALUE 0x0
#define PIO_BITCRUSHER_BYPASS_SPAN 16
#define PIO_BITCRUSHER_BYPASS_TYPE "altera_avalon_pio"


/*
 * pio_bitcrusher_crush configuration
 *
 */

#define ALT_MODULE_CLASS_pio_bitcrusher_crush altera_avalon_pio
#define PIO_BITCRUSHER_CRUSH_BASE 0xd03100
#define PIO_BITCRUSHER_CRUSH_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_BITCRUSHER_CRUSH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_BITCRUSHER_CRUSH_CAPTURE 0
#define PIO_BITCRUSHER_CRUSH_DATA_WIDTH 4
#define PIO_BITCRUSHER_CRUSH_DO_TEST_BENCH_WIRING 0
#define PIO_BITCRUSHER_CRUSH_DRIVEN_SIM_VALUE 0x0
#define PIO_BITCRUSHER_CRUSH_EDGE_TYPE "NONE"
#define PIO_BITCRUSHER_CRUSH_FREQ 50000000u
#define PIO_BITCRUSHER_CRUSH_HAS_IN 0
#define PIO_BITCRUSHER_CRUSH_HAS_OUT 1
#define PIO_BITCRUSHER_CRUSH_HAS_TRI 0
#define PIO_BITCRUSHER_CRUSH_IRQ -1
#define PIO_BITCRUSHER_CRUSH_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_BITCRUSHER_CRUSH_IRQ_TYPE "NONE"
#define PIO_BITCRUSHER_CRUSH_NAME "/dev/pio_bitcrusher_crush"
#define PIO_BITCRUSHER_CRUSH_RESET_VALUE 0x0
#define PIO_BITCRUSHER_CRUSH_SPAN 16
#define PIO_BITCRUSHER_CRUSH_TYPE "altera_avalon_pio"


/*
 * pio_bitcrusher_downsample configuration
 *
 */

#define ALT_MODULE_CLASS_pio_bitcrusher_downsample altera_avalon_pio
#define PIO_BITCRUSHER_DOWNSAMPLE_BASE 0xd03110
#define PIO_BITCRUSHER_DOWNSAMPLE_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_BITCRUSHER_DOWNSAMPLE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_BITCRUSHER_DOWNSAMPLE_CAPTURE 0
#define PIO_BITCRUSHER_DOWNSAMPLE_DATA_WIDTH 8
#define PIO_BITCRUSHER_DOWNSAMPLE_DO_TEST_BENCH_WIRING 0
#define PIO_BITCRUSHER_DOWNSAMPLE_DRIVEN_SIM_VALUE 0x0
#define PIO_BITCRUSHER_DOWNSAMPLE_EDGE_TYPE "NONE"
#define PIO_BITCRUSHER_DOWNSAMPLE_FREQ 50000000u
#define PIO_BITCRUSHER_DOWNSAMPLE_HAS_IN 0
#define PIO_BITCRUSHER_DOWNSAMPLE_HAS_OUT 1
#define PIO_BITCRUSHER_DOWNSAMPLE_HAS_TRI 0
#define PIO_BITCRUSHER_DOWNSAMPLE_IRQ -1
#define PIO_BITCRUSHER_DOWNSAMPLE_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_BITCRUSHER_DOWNSAMPLE_IRQ_TYPE "NONE"
#define PIO_BITCRUSHER_DOWNSAMPLE_NAME "/dev/pio_bitcrusher_downsample"
#define PIO_BITCRUSHER_DOWNSAMPLE_RESET_VALUE 0x0
#define PIO_BITCRUSHER_DOWNSAMPLE_SPAN 16
#define PIO_BITCRUSHER_DOWNSAMPLE_TYPE "altera_avalon_pio"


/*
 * pio_bitcrusher_drywet configuration
 *
 */

#define ALT_MODULE_CLASS_pio_bitcrusher_drywet altera_avalon_pio
#define PIO_BITCRUSHER_DRYWET_BASE 0xd03120
#define PIO_BITCRUSHER_DRYWET_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_BITCRUSHER_DRYWET_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_BITCRUSHER_DRYWET_CAPTURE 0
#define PIO_BITCRUSHER_DRYWET_DATA_WIDTH 16
#define PIO_BITCRUSHER_DRYWET_DO_TEST_BENCH_WIRING 0
#define PIO_BITCRUSHER_DRYWET_DRIVEN_SIM_VALUE 0x0
#define PIO_BITCRUSHER_DRYWET_EDGE_TYPE "NONE"
#define PIO_BITCRUSHER_DRYWET_FREQ 50000000u
#define PIO_BITCRUSHER_DRYWET_HAS_IN 0
#define PIO_BITCRUSHER_DRYWET_HAS_OUT 1
#define PIO_BITCRUSHER_DRYWET_HAS_TRI 0
#define PIO_BITCRUSHER_DRYWET_IRQ -1
#define PIO_BITCRUSHER_DRYWET_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_BITCRUSHER_DRYWET_IRQ_TYPE "NONE"
#define PIO_BITCRUSHER_DRYWET_NAME "/dev/pio_bitcrusher_drywet"
#define PIO_BITCRUSHER_DRYWET_RESET_VALUE 0x0
#define PIO_BITCRUSHER_DRYWET_SPAN 16
#define PIO_BITCRUSHER_DRYWET_TYPE "altera_avalon_pio"


/*
 * pio_bitcrusher_flavor configuration
 *
 */

#define ALT_MODULE_CLASS_pio_bitcrusher_flavor altera_avalon_pio
#define PIO_BITCRUSHER_FLAVOR_BASE 0xd031d0
#define PIO_BITCRUSHER_FLAVOR_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_BITCRUSHER_FLAVOR_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_BITCRUSHER_FLAVOR_CAPTURE 0
#define PIO_BITCRUSHER_FLAVOR_DATA_WIDTH 4
#define PIO_BITCRUSHER_FLAVOR_DO_TEST_BENCH_WIRING 0
#define PIO_BITCRUSHER_FLAVOR_DRIVEN_SIM_VALUE 0x0
#define PIO_BITCRUSHER_FLAVOR_EDGE_TYPE "NONE"
#define PIO_BITCRUSHER_FLAVOR_FREQ 50000000u
#define PIO_BITCRUSHER_FLAVOR_HAS_IN 0
#define PIO_BITCRUSHER_FLAVOR_HAS_OUT 1
#define PIO_BITCRUSHER_FLAVOR_HAS_TRI 0
#define PIO_BITCRUSHER_FLAVOR_IRQ -1
#define PIO_BITCRUSHER_FLAVOR_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_BITCRUSHER_FLAVOR_IRQ_TYPE "NONE"
#define PIO_BITCRUSHER_FLAVOR_NAME "/dev/pio_bitcrusher_flavor"
#define PIO_BITCRUSHER_FLAVOR_RESET_VALUE 0x0
#define PIO_BITCRUSHER_FLAVOR_SPAN 16
#define PIO_BITCRUSHER_FLAVOR_TYPE "altera_avalon_pio"


/*
 * pio_bitcrusher_tone configuration
 *
 */

#define ALT_MODULE_CLASS_pio_bitcrusher_tone altera_avalon_pio
#define PIO_BITCRUSHER_TONE_BASE 0xd031c0
#define PIO_BITCRUSHER_TONE_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_BITCRUSHER_TONE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_BITCRUSHER_TONE_CAPTURE 0
#define PIO_BITCRUSHER_TONE_DATA_WIDTH 16
#define PIO_BITCRUSHER_TONE_DO_TEST_BENCH_WIRING 0
#define PIO_BITCRUSHER_TONE_DRIVEN_SIM_VALUE 0x0
#define PIO_BITCRUSHER_TONE_EDGE_TYPE "NONE"
#define PIO_BITCRUSHER_TONE_FREQ 50000000u
#define PIO_BITCRUSHER_TONE_HAS_IN 0
#define PIO_BITCRUSHER_TONE_HAS_OUT 1
#define PIO_BITCRUSHER_TONE_HAS_TRI 0
#define PIO_BITCRUSHER_TONE_IRQ -1
#define PIO_BITCRUSHER_TONE_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_BITCRUSHER_TONE_IRQ_TYPE "NONE"
#define PIO_BITCRUSHER_TONE_NAME "/dev/pio_bitcrusher_tone"
#define PIO_BITCRUSHER_TONE_RESET_VALUE 0x0
#define PIO_BITCRUSHER_TONE_SPAN 16
#define PIO_BITCRUSHER_TONE_TYPE "altera_avalon_pio"


/*
 * pio_compressor_bypass configuration
 *
 */

#define ALT_MODULE_CLASS_pio_compressor_bypass altera_avalon_pio
#define PIO_COMPRESSOR_BYPASS_BASE 0xd030e0
#define PIO_COMPRESSOR_BYPASS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_COMPRESSOR_BYPASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_COMPRESSOR_BYPASS_CAPTURE 0
#define PIO_COMPRESSOR_BYPASS_DATA_WIDTH 1
#define PIO_COMPRESSOR_BYPASS_DO_TEST_BENCH_WIRING 0
#define PIO_COMPRESSOR_BYPASS_DRIVEN_SIM_VALUE 0x0
#define PIO_COMPRESSOR_BYPASS_EDGE_TYPE "NONE"
#define PIO_COMPRESSOR_BYPASS_FREQ 50000000u
#define PIO_COMPRESSOR_BYPASS_HAS_IN 0
#define PIO_COMPRESSOR_BYPASS_HAS_OUT 1
#define PIO_COMPRESSOR_BYPASS_HAS_TRI 0
#define PIO_COMPRESSOR_BYPASS_IRQ -1
#define PIO_COMPRESSOR_BYPASS_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_COMPRESSOR_BYPASS_IRQ_TYPE "NONE"
#define PIO_COMPRESSOR_BYPASS_NAME "/dev/pio_compressor_bypass"
#define PIO_COMPRESSOR_BYPASS_RESET_VALUE 0x0
#define PIO_COMPRESSOR_BYPASS_SPAN 16
#define PIO_COMPRESSOR_BYPASS_TYPE "altera_avalon_pio"


/*
 * pio_compressor_gain configuration
 *
 */

#define ALT_MODULE_CLASS_pio_compressor_gain altera_avalon_pio
#define PIO_COMPRESSOR_GAIN_BASE 0xd030c0
#define PIO_COMPRESSOR_GAIN_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_COMPRESSOR_GAIN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_COMPRESSOR_GAIN_CAPTURE 0
#define PIO_COMPRESSOR_GAIN_DATA_WIDTH 8
#define PIO_COMPRESSOR_GAIN_DO_TEST_BENCH_WIRING 0
#define PIO_COMPRESSOR_GAIN_DRIVEN_SIM_VALUE 0x0
#define PIO_COMPRESSOR_GAIN_EDGE_TYPE "NONE"
#define PIO_COMPRESSOR_GAIN_FREQ 50000000u
#define PIO_COMPRESSOR_GAIN_HAS_IN 0
#define PIO_COMPRESSOR_GAIN_HAS_OUT 1
#define PIO_COMPRESSOR_GAIN_HAS_TRI 0
#define PIO_COMPRESSOR_GAIN_IRQ -1
#define PIO_COMPRESSOR_GAIN_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_COMPRESSOR_GAIN_IRQ_TYPE "NONE"
#define PIO_COMPRESSOR_GAIN_NAME "/dev/pio_compressor_gain"
#define PIO_COMPRESSOR_GAIN_RESET_VALUE 0x0
#define PIO_COMPRESSOR_GAIN_SPAN 16
#define PIO_COMPRESSOR_GAIN_TYPE "altera_avalon_pio"


/*
 * pio_compressor_treshold configuration
 *
 */

#define ALT_MODULE_CLASS_pio_compressor_treshold altera_avalon_pio
#define PIO_COMPRESSOR_TRESHOLD_BASE 0xd030d0
#define PIO_COMPRESSOR_TRESHOLD_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_COMPRESSOR_TRESHOLD_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_COMPRESSOR_TRESHOLD_CAPTURE 0
#define PIO_COMPRESSOR_TRESHOLD_DATA_WIDTH 16
#define PIO_COMPRESSOR_TRESHOLD_DO_TEST_BENCH_WIRING 0
#define PIO_COMPRESSOR_TRESHOLD_DRIVEN_SIM_VALUE 0x0
#define PIO_COMPRESSOR_TRESHOLD_EDGE_TYPE "NONE"
#define PIO_COMPRESSOR_TRESHOLD_FREQ 50000000u
#define PIO_COMPRESSOR_TRESHOLD_HAS_IN 0
#define PIO_COMPRESSOR_TRESHOLD_HAS_OUT 1
#define PIO_COMPRESSOR_TRESHOLD_HAS_TRI 0
#define PIO_COMPRESSOR_TRESHOLD_IRQ -1
#define PIO_COMPRESSOR_TRESHOLD_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_COMPRESSOR_TRESHOLD_IRQ_TYPE "NONE"
#define PIO_COMPRESSOR_TRESHOLD_NAME "/dev/pio_compressor_treshold"
#define PIO_COMPRESSOR_TRESHOLD_RESET_VALUE 0x0
#define PIO_COMPRESSOR_TRESHOLD_SPAN 16
#define PIO_COMPRESSOR_TRESHOLD_TYPE "altera_avalon_pio"


/*
 * pio_delay_bypass configuration
 *
 */

#define ALT_MODULE_CLASS_pio_delay_bypass altera_avalon_pio
#define PIO_DELAY_BYPASS_BASE 0xd03050
#define PIO_DELAY_BYPASS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_DELAY_BYPASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_DELAY_BYPASS_CAPTURE 0
#define PIO_DELAY_BYPASS_DATA_WIDTH 1
#define PIO_DELAY_BYPASS_DO_TEST_BENCH_WIRING 0
#define PIO_DELAY_BYPASS_DRIVEN_SIM_VALUE 0x0
#define PIO_DELAY_BYPASS_EDGE_TYPE "NONE"
#define PIO_DELAY_BYPASS_FREQ 50000000u
#define PIO_DELAY_BYPASS_HAS_IN 0
#define PIO_DELAY_BYPASS_HAS_OUT 1
#define PIO_DELAY_BYPASS_HAS_TRI 0
#define PIO_DELAY_BYPASS_IRQ -1
#define PIO_DELAY_BYPASS_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_DELAY_BYPASS_IRQ_TYPE "NONE"
#define PIO_DELAY_BYPASS_NAME "/dev/pio_delay_bypass"
#define PIO_DELAY_BYPASS_RESET_VALUE 0x0
#define PIO_DELAY_BYPASS_SPAN 16
#define PIO_DELAY_BYPASS_TYPE "altera_avalon_pio"


/*
 * pio_delay_decay configuration
 *
 */

#define ALT_MODULE_CLASS_pio_delay_decay altera_avalon_pio
#define PIO_DELAY_DECAY_BASE 0xd03080
#define PIO_DELAY_DECAY_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_DELAY_DECAY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_DELAY_DECAY_CAPTURE 0
#define PIO_DELAY_DECAY_DATA_WIDTH 8
#define PIO_DELAY_DECAY_DO_TEST_BENCH_WIRING 0
#define PIO_DELAY_DECAY_DRIVEN_SIM_VALUE 0x0
#define PIO_DELAY_DECAY_EDGE_TYPE "NONE"
#define PIO_DELAY_DECAY_FREQ 50000000u
#define PIO_DELAY_DECAY_HAS_IN 0
#define PIO_DELAY_DECAY_HAS_OUT 1
#define PIO_DELAY_DECAY_HAS_TRI 0
#define PIO_DELAY_DECAY_IRQ -1
#define PIO_DELAY_DECAY_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_DELAY_DECAY_IRQ_TYPE "NONE"
#define PIO_DELAY_DECAY_NAME "/dev/pio_delay_decay"
#define PIO_DELAY_DECAY_RESET_VALUE 0x0
#define PIO_DELAY_DECAY_SPAN 16
#define PIO_DELAY_DECAY_TYPE "altera_avalon_pio"


/*
 * pio_delay_length configuration
 *
 */

#define ALT_MODULE_CLASS_pio_delay_length altera_avalon_pio
#define PIO_DELAY_LENGTH_BASE 0xd030b0
#define PIO_DELAY_LENGTH_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_DELAY_LENGTH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_DELAY_LENGTH_CAPTURE 0
#define PIO_DELAY_LENGTH_DATA_WIDTH 16
#define PIO_DELAY_LENGTH_DO_TEST_BENCH_WIRING 0
#define PIO_DELAY_LENGTH_DRIVEN_SIM_VALUE 0x0
#define PIO_DELAY_LENGTH_EDGE_TYPE "NONE"
#define PIO_DELAY_LENGTH_FREQ 50000000u
#define PIO_DELAY_LENGTH_HAS_IN 0
#define PIO_DELAY_LENGTH_HAS_OUT 1
#define PIO_DELAY_LENGTH_HAS_TRI 0
#define PIO_DELAY_LENGTH_IRQ -1
#define PIO_DELAY_LENGTH_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_DELAY_LENGTH_IRQ_TYPE "NONE"
#define PIO_DELAY_LENGTH_NAME "/dev/pio_delay_length"
#define PIO_DELAY_LENGTH_RESET_VALUE 0x0
#define PIO_DELAY_LENGTH_SPAN 16
#define PIO_DELAY_LENGTH_TYPE "altera_avalon_pio"


/*
 * pio_master_volume configuration
 *
 */

#define ALT_MODULE_CLASS_pio_master_volume altera_avalon_pio
#define PIO_MASTER_VOLUME_BASE 0xd030a0
#define PIO_MASTER_VOLUME_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_MASTER_VOLUME_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_MASTER_VOLUME_CAPTURE 0
#define PIO_MASTER_VOLUME_DATA_WIDTH 16
#define PIO_MASTER_VOLUME_DO_TEST_BENCH_WIRING 0
#define PIO_MASTER_VOLUME_DRIVEN_SIM_VALUE 0x0
#define PIO_MASTER_VOLUME_EDGE_TYPE "NONE"
#define PIO_MASTER_VOLUME_FREQ 50000000u
#define PIO_MASTER_VOLUME_HAS_IN 0
#define PIO_MASTER_VOLUME_HAS_OUT 1
#define PIO_MASTER_VOLUME_HAS_TRI 0
#define PIO_MASTER_VOLUME_IRQ -1
#define PIO_MASTER_VOLUME_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_MASTER_VOLUME_IRQ_TYPE "NONE"
#define PIO_MASTER_VOLUME_NAME "/dev/pio_master_volume"
#define PIO_MASTER_VOLUME_RESET_VALUE 0x0
#define PIO_MASTER_VOLUME_SPAN 16
#define PIO_MASTER_VOLUME_TYPE "altera_avalon_pio"


/*
 * pio_octaver_bypass configuration
 *
 */

#define ALT_MODULE_CLASS_pio_octaver_bypass altera_avalon_pio
#define PIO_OCTAVER_BYPASS_BASE 0xd03160
#define PIO_OCTAVER_BYPASS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_OCTAVER_BYPASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_OCTAVER_BYPASS_CAPTURE 0
#define PIO_OCTAVER_BYPASS_DATA_WIDTH 1
#define PIO_OCTAVER_BYPASS_DO_TEST_BENCH_WIRING 0
#define PIO_OCTAVER_BYPASS_DRIVEN_SIM_VALUE 0x0
#define PIO_OCTAVER_BYPASS_EDGE_TYPE "NONE"
#define PIO_OCTAVER_BYPASS_FREQ 50000000u
#define PIO_OCTAVER_BYPASS_HAS_IN 0
#define PIO_OCTAVER_BYPASS_HAS_OUT 1
#define PIO_OCTAVER_BYPASS_HAS_TRI 0
#define PIO_OCTAVER_BYPASS_IRQ -1
#define PIO_OCTAVER_BYPASS_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_OCTAVER_BYPASS_IRQ_TYPE "NONE"
#define PIO_OCTAVER_BYPASS_NAME "/dev/pio_octaver_bypass"
#define PIO_OCTAVER_BYPASS_RESET_VALUE 0x0
#define PIO_OCTAVER_BYPASS_SPAN 16
#define PIO_OCTAVER_BYPASS_TYPE "altera_avalon_pio"


/*
 * pio_octaver_dry_wet configuration
 *
 */

#define ALT_MODULE_CLASS_pio_octaver_dry_wet altera_avalon_pio
#define PIO_OCTAVER_DRY_WET_BASE 0xd03170
#define PIO_OCTAVER_DRY_WET_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_OCTAVER_DRY_WET_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_OCTAVER_DRY_WET_CAPTURE 0
#define PIO_OCTAVER_DRY_WET_DATA_WIDTH 16
#define PIO_OCTAVER_DRY_WET_DO_TEST_BENCH_WIRING 0
#define PIO_OCTAVER_DRY_WET_DRIVEN_SIM_VALUE 0x0
#define PIO_OCTAVER_DRY_WET_EDGE_TYPE "NONE"
#define PIO_OCTAVER_DRY_WET_FREQ 50000000u
#define PIO_OCTAVER_DRY_WET_HAS_IN 0
#define PIO_OCTAVER_DRY_WET_HAS_OUT 1
#define PIO_OCTAVER_DRY_WET_HAS_TRI 0
#define PIO_OCTAVER_DRY_WET_IRQ -1
#define PIO_OCTAVER_DRY_WET_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_OCTAVER_DRY_WET_IRQ_TYPE "NONE"
#define PIO_OCTAVER_DRY_WET_NAME "/dev/pio_octaver_dry_wet"
#define PIO_OCTAVER_DRY_WET_RESET_VALUE 0x0
#define PIO_OCTAVER_DRY_WET_SPAN 16
#define PIO_OCTAVER_DRY_WET_TYPE "altera_avalon_pio"


/*
 * pio_output_power_left configuration
 *
 */

#define ALT_MODULE_CLASS_pio_output_power_left altera_avalon_pio
#define PIO_OUTPUT_POWER_LEFT_BASE 0xd03180
#define PIO_OUTPUT_POWER_LEFT_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_OUTPUT_POWER_LEFT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_OUTPUT_POWER_LEFT_CAPTURE 0
#define PIO_OUTPUT_POWER_LEFT_DATA_WIDTH 16
#define PIO_OUTPUT_POWER_LEFT_DO_TEST_BENCH_WIRING 0
#define PIO_OUTPUT_POWER_LEFT_DRIVEN_SIM_VALUE 0x0
#define PIO_OUTPUT_POWER_LEFT_EDGE_TYPE "NONE"
#define PIO_OUTPUT_POWER_LEFT_FREQ 50000000u
#define PIO_OUTPUT_POWER_LEFT_HAS_IN 1
#define PIO_OUTPUT_POWER_LEFT_HAS_OUT 0
#define PIO_OUTPUT_POWER_LEFT_HAS_TRI 0
#define PIO_OUTPUT_POWER_LEFT_IRQ -1
#define PIO_OUTPUT_POWER_LEFT_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_OUTPUT_POWER_LEFT_IRQ_TYPE "NONE"
#define PIO_OUTPUT_POWER_LEFT_NAME "/dev/pio_output_power_left"
#define PIO_OUTPUT_POWER_LEFT_RESET_VALUE 0x0
#define PIO_OUTPUT_POWER_LEFT_SPAN 16
#define PIO_OUTPUT_POWER_LEFT_TYPE "altera_avalon_pio"


/*
 * pio_output_power_right configuration
 *
 */

#define ALT_MODULE_CLASS_pio_output_power_right altera_avalon_pio
#define PIO_OUTPUT_POWER_RIGHT_BASE 0xd031a0
#define PIO_OUTPUT_POWER_RIGHT_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_OUTPUT_POWER_RIGHT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_OUTPUT_POWER_RIGHT_CAPTURE 0
#define PIO_OUTPUT_POWER_RIGHT_DATA_WIDTH 16
#define PIO_OUTPUT_POWER_RIGHT_DO_TEST_BENCH_WIRING 0
#define PIO_OUTPUT_POWER_RIGHT_DRIVEN_SIM_VALUE 0x0
#define PIO_OUTPUT_POWER_RIGHT_EDGE_TYPE "NONE"
#define PIO_OUTPUT_POWER_RIGHT_FREQ 50000000u
#define PIO_OUTPUT_POWER_RIGHT_HAS_IN 1
#define PIO_OUTPUT_POWER_RIGHT_HAS_OUT 0
#define PIO_OUTPUT_POWER_RIGHT_HAS_TRI 0
#define PIO_OUTPUT_POWER_RIGHT_IRQ -1
#define PIO_OUTPUT_POWER_RIGHT_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_OUTPUT_POWER_RIGHT_IRQ_TYPE "NONE"
#define PIO_OUTPUT_POWER_RIGHT_NAME "/dev/pio_output_power_right"
#define PIO_OUTPUT_POWER_RIGHT_RESET_VALUE 0x0
#define PIO_OUTPUT_POWER_RIGHT_SPAN 16
#define PIO_OUTPUT_POWER_RIGHT_TYPE "altera_avalon_pio"


/*
 * pio_overdrive_asymmetric configuration
 *
 */

#define ALT_MODULE_CLASS_pio_overdrive_asymmetric altera_avalon_pio
#define PIO_OVERDRIVE_ASYMMETRIC_BASE 0xd03070
#define PIO_OVERDRIVE_ASYMMETRIC_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_OVERDRIVE_ASYMMETRIC_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_OVERDRIVE_ASYMMETRIC_CAPTURE 0
#define PIO_OVERDRIVE_ASYMMETRIC_DATA_WIDTH 1
#define PIO_OVERDRIVE_ASYMMETRIC_DO_TEST_BENCH_WIRING 0
#define PIO_OVERDRIVE_ASYMMETRIC_DRIVEN_SIM_VALUE 0x0
#define PIO_OVERDRIVE_ASYMMETRIC_EDGE_TYPE "NONE"
#define PIO_OVERDRIVE_ASYMMETRIC_FREQ 50000000u
#define PIO_OVERDRIVE_ASYMMETRIC_HAS_IN 0
#define PIO_OVERDRIVE_ASYMMETRIC_HAS_OUT 1
#define PIO_OVERDRIVE_ASYMMETRIC_HAS_TRI 0
#define PIO_OVERDRIVE_ASYMMETRIC_IRQ -1
#define PIO_OVERDRIVE_ASYMMETRIC_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_OVERDRIVE_ASYMMETRIC_IRQ_TYPE "NONE"
#define PIO_OVERDRIVE_ASYMMETRIC_NAME "/dev/pio_overdrive_asymmetric"
#define PIO_OVERDRIVE_ASYMMETRIC_RESET_VALUE 0x0
#define PIO_OVERDRIVE_ASYMMETRIC_SPAN 16
#define PIO_OVERDRIVE_ASYMMETRIC_TYPE "altera_avalon_pio"


/*
 * pio_overdrive_bypass configuration
 *
 */

#define ALT_MODULE_CLASS_pio_overdrive_bypass altera_avalon_pio
#define PIO_OVERDRIVE_BYPASS_BASE 0xd03060
#define PIO_OVERDRIVE_BYPASS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_OVERDRIVE_BYPASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_OVERDRIVE_BYPASS_CAPTURE 0
#define PIO_OVERDRIVE_BYPASS_DATA_WIDTH 1
#define PIO_OVERDRIVE_BYPASS_DO_TEST_BENCH_WIRING 0
#define PIO_OVERDRIVE_BYPASS_DRIVEN_SIM_VALUE 0x0
#define PIO_OVERDRIVE_BYPASS_EDGE_TYPE "NONE"
#define PIO_OVERDRIVE_BYPASS_FREQ 50000000u
#define PIO_OVERDRIVE_BYPASS_HAS_IN 0
#define PIO_OVERDRIVE_BYPASS_HAS_OUT 1
#define PIO_OVERDRIVE_BYPASS_HAS_TRI 0
#define PIO_OVERDRIVE_BYPASS_IRQ -1
#define PIO_OVERDRIVE_BYPASS_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_OVERDRIVE_BYPASS_IRQ_TYPE "NONE"
#define PIO_OVERDRIVE_BYPASS_NAME "/dev/pio_overdrive_bypass"
#define PIO_OVERDRIVE_BYPASS_RESET_VALUE 0x0
#define PIO_OVERDRIVE_BYPASS_SPAN 16
#define PIO_OVERDRIVE_BYPASS_TYPE "altera_avalon_pio"


/*
 * pio_overdrive_gain configuration
 *
 */

#define ALT_MODULE_CLASS_pio_overdrive_gain altera_avalon_pio
#define PIO_OVERDRIVE_GAIN_BASE 0xd03090
#define PIO_OVERDRIVE_GAIN_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_OVERDRIVE_GAIN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_OVERDRIVE_GAIN_CAPTURE 0
#define PIO_OVERDRIVE_GAIN_DATA_WIDTH 16
#define PIO_OVERDRIVE_GAIN_DO_TEST_BENCH_WIRING 0
#define PIO_OVERDRIVE_GAIN_DRIVEN_SIM_VALUE 0x0
#define PIO_OVERDRIVE_GAIN_EDGE_TYPE "NONE"
#define PIO_OVERDRIVE_GAIN_FREQ 50000000u
#define PIO_OVERDRIVE_GAIN_HAS_IN 0
#define PIO_OVERDRIVE_GAIN_HAS_OUT 1
#define PIO_OVERDRIVE_GAIN_HAS_TRI 0
#define PIO_OVERDRIVE_GAIN_IRQ -1
#define PIO_OVERDRIVE_GAIN_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_OVERDRIVE_GAIN_IRQ_TYPE "NONE"
#define PIO_OVERDRIVE_GAIN_NAME "/dev/pio_overdrive_gain"
#define PIO_OVERDRIVE_GAIN_RESET_VALUE 0x0
#define PIO_OVERDRIVE_GAIN_SPAN 16
#define PIO_OVERDRIVE_GAIN_TYPE "altera_avalon_pio"


/*
 * pio_overdrive_tone configuration
 *
 */

#define ALT_MODULE_CLASS_pio_overdrive_tone altera_avalon_pio
#define PIO_OVERDRIVE_TONE_BASE 0xd03040
#define PIO_OVERDRIVE_TONE_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_OVERDRIVE_TONE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_OVERDRIVE_TONE_CAPTURE 0
#define PIO_OVERDRIVE_TONE_DATA_WIDTH 16
#define PIO_OVERDRIVE_TONE_DO_TEST_BENCH_WIRING 0
#define PIO_OVERDRIVE_TONE_DRIVEN_SIM_VALUE 0x0
#define PIO_OVERDRIVE_TONE_EDGE_TYPE "NONE"
#define PIO_OVERDRIVE_TONE_FREQ 50000000u
#define PIO_OVERDRIVE_TONE_HAS_IN 0
#define PIO_OVERDRIVE_TONE_HAS_OUT 1
#define PIO_OVERDRIVE_TONE_HAS_TRI 0
#define PIO_OVERDRIVE_TONE_IRQ -1
#define PIO_OVERDRIVE_TONE_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_OVERDRIVE_TONE_IRQ_TYPE "NONE"
#define PIO_OVERDRIVE_TONE_NAME "/dev/pio_overdrive_tone"
#define PIO_OVERDRIVE_TONE_RESET_VALUE 0x0
#define PIO_OVERDRIVE_TONE_SPAN 16
#define PIO_OVERDRIVE_TONE_TYPE "altera_avalon_pio"


/*
 * pio_overdrive_volume configuration
 *
 */

#define ALT_MODULE_CLASS_pio_overdrive_volume altera_avalon_pio
#define PIO_OVERDRIVE_VOLUME_BASE 0xd03030
#define PIO_OVERDRIVE_VOLUME_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_OVERDRIVE_VOLUME_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_OVERDRIVE_VOLUME_CAPTURE 0
#define PIO_OVERDRIVE_VOLUME_DATA_WIDTH 16
#define PIO_OVERDRIVE_VOLUME_DO_TEST_BENCH_WIRING 0
#define PIO_OVERDRIVE_VOLUME_DRIVEN_SIM_VALUE 0x0
#define PIO_OVERDRIVE_VOLUME_EDGE_TYPE "NONE"
#define PIO_OVERDRIVE_VOLUME_FREQ 50000000u
#define PIO_OVERDRIVE_VOLUME_HAS_IN 0
#define PIO_OVERDRIVE_VOLUME_HAS_OUT 1
#define PIO_OVERDRIVE_VOLUME_HAS_TRI 0
#define PIO_OVERDRIVE_VOLUME_IRQ -1
#define PIO_OVERDRIVE_VOLUME_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_OVERDRIVE_VOLUME_IRQ_TYPE "NONE"
#define PIO_OVERDRIVE_VOLUME_NAME "/dev/pio_overdrive_volume"
#define PIO_OVERDRIVE_VOLUME_RESET_VALUE 0x0
#define PIO_OVERDRIVE_VOLUME_SPAN 16
#define PIO_OVERDRIVE_VOLUME_TYPE "altera_avalon_pio"


/*
 * pio_tremolo_stereo_bypass configuration
 *
 */

#define ALT_MODULE_CLASS_pio_tremolo_stereo_bypass altera_avalon_pio
#define PIO_TREMOLO_STEREO_BYPASS_BASE 0xd03130
#define PIO_TREMOLO_STEREO_BYPASS_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_TREMOLO_STEREO_BYPASS_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TREMOLO_STEREO_BYPASS_CAPTURE 0
#define PIO_TREMOLO_STEREO_BYPASS_DATA_WIDTH 1
#define PIO_TREMOLO_STEREO_BYPASS_DO_TEST_BENCH_WIRING 0
#define PIO_TREMOLO_STEREO_BYPASS_DRIVEN_SIM_VALUE 0x0
#define PIO_TREMOLO_STEREO_BYPASS_EDGE_TYPE "NONE"
#define PIO_TREMOLO_STEREO_BYPASS_FREQ 50000000u
#define PIO_TREMOLO_STEREO_BYPASS_HAS_IN 0
#define PIO_TREMOLO_STEREO_BYPASS_HAS_OUT 1
#define PIO_TREMOLO_STEREO_BYPASS_HAS_TRI 0
#define PIO_TREMOLO_STEREO_BYPASS_IRQ -1
#define PIO_TREMOLO_STEREO_BYPASS_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_TREMOLO_STEREO_BYPASS_IRQ_TYPE "NONE"
#define PIO_TREMOLO_STEREO_BYPASS_NAME "/dev/pio_tremolo_stereo_bypass"
#define PIO_TREMOLO_STEREO_BYPASS_RESET_VALUE 0x0
#define PIO_TREMOLO_STEREO_BYPASS_SPAN 16
#define PIO_TREMOLO_STEREO_BYPASS_TYPE "altera_avalon_pio"


/*
 * pio_tremolo_stereo_depth configuration
 *
 */

#define ALT_MODULE_CLASS_pio_tremolo_stereo_depth altera_avalon_pio
#define PIO_TREMOLO_STEREO_DEPTH_BASE 0xd03140
#define PIO_TREMOLO_STEREO_DEPTH_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_TREMOLO_STEREO_DEPTH_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TREMOLO_STEREO_DEPTH_CAPTURE 0
#define PIO_TREMOLO_STEREO_DEPTH_DATA_WIDTH 16
#define PIO_TREMOLO_STEREO_DEPTH_DO_TEST_BENCH_WIRING 0
#define PIO_TREMOLO_STEREO_DEPTH_DRIVEN_SIM_VALUE 0x0
#define PIO_TREMOLO_STEREO_DEPTH_EDGE_TYPE "NONE"
#define PIO_TREMOLO_STEREO_DEPTH_FREQ 50000000u
#define PIO_TREMOLO_STEREO_DEPTH_HAS_IN 0
#define PIO_TREMOLO_STEREO_DEPTH_HAS_OUT 1
#define PIO_TREMOLO_STEREO_DEPTH_HAS_TRI 0
#define PIO_TREMOLO_STEREO_DEPTH_IRQ -1
#define PIO_TREMOLO_STEREO_DEPTH_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_TREMOLO_STEREO_DEPTH_IRQ_TYPE "NONE"
#define PIO_TREMOLO_STEREO_DEPTH_NAME "/dev/pio_tremolo_stereo_depth"
#define PIO_TREMOLO_STEREO_DEPTH_RESET_VALUE 0x0
#define PIO_TREMOLO_STEREO_DEPTH_SPAN 16
#define PIO_TREMOLO_STEREO_DEPTH_TYPE "altera_avalon_pio"


/*
 * pio_tremolo_stereo_mode configuration
 *
 */

#define ALT_MODULE_CLASS_pio_tremolo_stereo_mode altera_avalon_pio
#define PIO_TREMOLO_STEREO_MODE_BASE 0xc00010
#define PIO_TREMOLO_STEREO_MODE_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_TREMOLO_STEREO_MODE_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TREMOLO_STEREO_MODE_CAPTURE 0
#define PIO_TREMOLO_STEREO_MODE_DATA_WIDTH 1
#define PIO_TREMOLO_STEREO_MODE_DO_TEST_BENCH_WIRING 0
#define PIO_TREMOLO_STEREO_MODE_DRIVEN_SIM_VALUE 0x0
#define PIO_TREMOLO_STEREO_MODE_EDGE_TYPE "NONE"
#define PIO_TREMOLO_STEREO_MODE_FREQ 50000000u
#define PIO_TREMOLO_STEREO_MODE_HAS_IN 0
#define PIO_TREMOLO_STEREO_MODE_HAS_OUT 1
#define PIO_TREMOLO_STEREO_MODE_HAS_TRI 0
#define PIO_TREMOLO_STEREO_MODE_IRQ -1
#define PIO_TREMOLO_STEREO_MODE_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_TREMOLO_STEREO_MODE_IRQ_TYPE "NONE"
#define PIO_TREMOLO_STEREO_MODE_NAME "/dev/pio_tremolo_stereo_mode"
#define PIO_TREMOLO_STEREO_MODE_RESET_VALUE 0x0
#define PIO_TREMOLO_STEREO_MODE_SPAN 16
#define PIO_TREMOLO_STEREO_MODE_TYPE "altera_avalon_pio"


/*
 * pio_tremolo_stereo_sweep_a configuration
 *
 */

#define ALT_MODULE_CLASS_pio_tremolo_stereo_sweep_a altera_avalon_pio
#define PIO_TREMOLO_STEREO_SWEEP_A_BASE 0xd03150
#define PIO_TREMOLO_STEREO_SWEEP_A_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_TREMOLO_STEREO_SWEEP_A_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TREMOLO_STEREO_SWEEP_A_CAPTURE 0
#define PIO_TREMOLO_STEREO_SWEEP_A_DATA_WIDTH 4
#define PIO_TREMOLO_STEREO_SWEEP_A_DO_TEST_BENCH_WIRING 0
#define PIO_TREMOLO_STEREO_SWEEP_A_DRIVEN_SIM_VALUE 0x0
#define PIO_TREMOLO_STEREO_SWEEP_A_EDGE_TYPE "NONE"
#define PIO_TREMOLO_STEREO_SWEEP_A_FREQ 50000000u
#define PIO_TREMOLO_STEREO_SWEEP_A_HAS_IN 0
#define PIO_TREMOLO_STEREO_SWEEP_A_HAS_OUT 1
#define PIO_TREMOLO_STEREO_SWEEP_A_HAS_TRI 0
#define PIO_TREMOLO_STEREO_SWEEP_A_IRQ -1
#define PIO_TREMOLO_STEREO_SWEEP_A_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_TREMOLO_STEREO_SWEEP_A_IRQ_TYPE "NONE"
#define PIO_TREMOLO_STEREO_SWEEP_A_NAME "/dev/pio_tremolo_stereo_sweep_a"
#define PIO_TREMOLO_STEREO_SWEEP_A_RESET_VALUE 0x0
#define PIO_TREMOLO_STEREO_SWEEP_A_SPAN 16
#define PIO_TREMOLO_STEREO_SWEEP_A_TYPE "altera_avalon_pio"


/*
 * pio_tremolo_stereo_sweep_b configuration
 *
 */

#define ALT_MODULE_CLASS_pio_tremolo_stereo_sweep_b altera_avalon_pio
#define PIO_TREMOLO_STEREO_SWEEP_B_BASE 0xc00000
#define PIO_TREMOLO_STEREO_SWEEP_B_BIT_CLEARING_EDGE_REGISTER 0
#define PIO_TREMOLO_STEREO_SWEEP_B_BIT_MODIFYING_OUTPUT_REGISTER 0
#define PIO_TREMOLO_STEREO_SWEEP_B_CAPTURE 0
#define PIO_TREMOLO_STEREO_SWEEP_B_DATA_WIDTH 4
#define PIO_TREMOLO_STEREO_SWEEP_B_DO_TEST_BENCH_WIRING 0
#define PIO_TREMOLO_STEREO_SWEEP_B_DRIVEN_SIM_VALUE 0x0
#define PIO_TREMOLO_STEREO_SWEEP_B_EDGE_TYPE "NONE"
#define PIO_TREMOLO_STEREO_SWEEP_B_FREQ 50000000u
#define PIO_TREMOLO_STEREO_SWEEP_B_HAS_IN 0
#define PIO_TREMOLO_STEREO_SWEEP_B_HAS_OUT 1
#define PIO_TREMOLO_STEREO_SWEEP_B_HAS_TRI 0
#define PIO_TREMOLO_STEREO_SWEEP_B_IRQ -1
#define PIO_TREMOLO_STEREO_SWEEP_B_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIO_TREMOLO_STEREO_SWEEP_B_IRQ_TYPE "NONE"
#define PIO_TREMOLO_STEREO_SWEEP_B_NAME "/dev/pio_tremolo_stereo_sweep_b"
#define PIO_TREMOLO_STEREO_SWEEP_B_RESET_VALUE 0x0
#define PIO_TREMOLO_STEREO_SWEEP_B_SPAN 16
#define PIO_TREMOLO_STEREO_SWEEP_B_TYPE "altera_avalon_pio"


/*
 * pixel_buffer configuration
 *
 */

#define ALT_MODULE_CLASS_pixel_buffer altera_up_avalon_pixel_buffer
#define PIXEL_BUFFER_BASE 0xd03020
#define PIXEL_BUFFER_IRQ -1
#define PIXEL_BUFFER_IRQ_INTERRUPT_CONTROLLER_ID -1
#define PIXEL_BUFFER_NAME "/dev/pixel_buffer"
#define PIXEL_BUFFER_SPAN 16
#define PIXEL_BUFFER_TYPE "altera_up_avalon_pixel_buffer"


/*
 * ps2 configuration
 *
 */

#define ALT_MODULE_CLASS_ps2 altera_up_avalon_ps2
#define PS2_BASE 0xd031f0
#define PS2_IRQ 1
#define PS2_IRQ_INTERRUPT_CONTROLLER_ID 0
#define PS2_NAME "/dev/ps2"
#define PS2_SPAN 8
#define PS2_TYPE "altera_up_avalon_ps2"


/*
 * sdram configuration
 *
 */

#define ALT_MODULE_CLASS_sdram altera_avalon_new_sdram_controller
#define SDRAM_BASE 0x0
#define SDRAM_CAS_LATENCY 3
#define SDRAM_CONTENTS_INFO ""
#define SDRAM_INIT_NOP_DELAY 0.0
#define SDRAM_INIT_REFRESH_COMMANDS 2
#define SDRAM_IRQ -1
#define SDRAM_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SDRAM_IS_INITIALIZED 1
#define SDRAM_NAME "/dev/sdram"
#define SDRAM_POWERUP_DELAY 100.0
#define SDRAM_REFRESH_PERIOD 15.625
#define SDRAM_REGISTER_DATA_IN 1
#define SDRAM_SDRAM_ADDR_WIDTH 22
#define SDRAM_SDRAM_BANK_WIDTH 2
#define SDRAM_SDRAM_COL_WIDTH 8
#define SDRAM_SDRAM_DATA_WIDTH 16
#define SDRAM_SDRAM_NUM_BANKS 4
#define SDRAM_SDRAM_NUM_CHIPSELECTS 1
#define SDRAM_SDRAM_ROW_WIDTH 12
#define SDRAM_SHARED_DATA 0
#define SDRAM_SIM_MODEL_BASE 1
#define SDRAM_SPAN 8388608
#define SDRAM_STARVATION_INDICATOR 0
#define SDRAM_TRISTATE_BRIDGE_SLAVE ""
#define SDRAM_TYPE "altera_avalon_new_sdram_controller"
#define SDRAM_T_AC 5.5
#define SDRAM_T_MRD 3
#define SDRAM_T_RCD 20.0
#define SDRAM_T_RFC 70.0
#define SDRAM_T_RP 20.0
#define SDRAM_T_WR 14.0


/*
 * sram configuration
 *
 */

#define ALT_MODULE_CLASS_sram altera_up_avalon_sram
#define SRAM_BASE 0xc80000
#define SRAM_IRQ -1
#define SRAM_IRQ_INTERRUPT_CONTROLLER_ID -1
#define SRAM_NAME "/dev/sram"
#define SRAM_SPAN 524288
#define SRAM_TYPE "altera_up_avalon_sram"

#endif /* __SYSTEM_H_ */
