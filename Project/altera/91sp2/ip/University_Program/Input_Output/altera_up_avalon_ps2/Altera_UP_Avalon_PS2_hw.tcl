# +----------------------------------------------------------------------------+
# | License Agreement                                                          |
# |                                                                            |
# | Copyright (c) 1991-2009 Altera Corporation, San Jose, California, USA.     |
# | All rights reserved.                                                       |
# |                                                                            |
# | Any megafunction design, and related net list (encrypted or decrypted),    |
# |  support information, device programming or simulation file, and any other |
# |  associated documentation or information provided by Altera or a partner   |
# |  under Altera's Megafunction Partnership Program may be used only to       |
# |  program PLD devices (but not masked PLD devices) from Altera.  Any other  |
# |  use of such megafunction design, net list, support information, device    |
# |  programming or simulation file, or any other related documentation or     |
# |  information is prohibited for any other purpose, including, but not       |
# |  limited to modification, reverse engineering, de-compiling, or use with   |
# |  any other silicon devices, unless such use is explicitly licensed under   |
# |  a separate agreement with Altera or a megafunction partner.  Title to     |
# |  the intellectual property, including patents, copyrights, trademarks,     |
# |  trade secrets, or maskworks, embodied in any such megafunction design,    |
# |  net list, support information, device programming or simulation file, or  |
# |  any other related documentation or information provided by Altera or a    |
# |  megafunction partner, remains with Altera, the megafunction partner, or   |
# |  their respective licensors.  No other licenses, including any licenses    |
# |  needed under any third party's intellectual property, are provided herein.|
# |  Copying or modifying any file, or portion thereof, to which this notice   |
# |  is attached violates this copyright.                                      |
# |                                                                            |
# | THIS FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    |
# | IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   |
# | FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    |
# | THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER |
# | LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    |
# | FROM, OUT OF OR IN CONNECTION WITH THIS FILE OR THE USE OR OTHER DEALINGS  |
# | IN THIS FILE.                                                              |
# |                                                                            |
# | This agreement shall be governed in all respects by the laws of the State  |
# |  of California and by the laws of the United States of America.            |
# |                                                                            |
# +----------------------------------------------------------------------------+

# TCL File Generated by Altera University Program
# DO NOT MODIFY

# +-----------------------------------
# | module altera_up_avalon_ps2
# | 
set_module_property DESCRIPTION "PS2 controller of the DE boards"
set_module_property NAME altera_up_avalon_ps2
set_module_property VERSION 9.0
set_module_property GROUP "University Program/Generic IO"
set_module_property AUTHOR "Altera University Program"
set_module_property DISPLAY_NAME "PS2 Controller"
set_module_property DATASHEET_URL "ftp.altera.com/up/archive/QII_9.0/Altera_Material/University_Program_IP/Generic_IO/PS2_Controller.pdf"
#set_module_property TOP_LEVEL_HDL_FILE Altera_UP_Avalon_PS2.v
#set_module_property TOP_LEVEL_HDL_MODULE Altera_UP_Avalon_PS2
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property SIMULATION_MODEL_IN_VERILOG false
set_module_property SIMULATION_MODEL_IN_VHDL false
set_module_property SIMULATION_MODEL_HAS_TULIPS false
set_module_property SIMULATION_MODEL_IS_OBFUSCATED false
set_module_property GENERATION_CALLBACK generate
# | 
# +-----------------------------------

# +-----------------------------------
# | files
# | 
#add_file Altera_UP_Avalon_PS2.v {SYNTHESIS SIMULATION}
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point clock_reset
# | 
add_interface clock_reset clock end
set_interface_property clock_reset ptfSchematicName ""

add_interface_port clock_reset clk clk Input 1
add_interface_port clock_reset reset reset Input 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point avalon_ps2_slave
# | 
add_interface avalon_ps2_slave avalon end
set_interface_property avalon_ps2_slave holdTime 0
set_interface_property avalon_ps2_slave linewrapBursts false
set_interface_property avalon_ps2_slave minimumUninterruptedRunLength 1
set_interface_property avalon_ps2_slave bridgesToMaster ""
set_interface_property avalon_ps2_slave isMemoryDevice false
set_interface_property avalon_ps2_slave burstOnBurstBoundariesOnly false
set_interface_property avalon_ps2_slave addressSpan 8
set_interface_property avalon_ps2_slave timingUnits Cycles
set_interface_property avalon_ps2_slave setupTime 0
set_interface_property avalon_ps2_slave writeWaitTime 0
set_interface_property avalon_ps2_slave isNonVolatileStorage false
set_interface_property avalon_ps2_slave addressAlignment DYNAMIC
set_interface_property avalon_ps2_slave maximumPendingReadTransactions 0
set_interface_property avalon_ps2_slave readWaitStates 0
set_interface_property avalon_ps2_slave readWaitTime 0
set_interface_property avalon_ps2_slave readLatency 1
set_interface_property avalon_ps2_slave printableDevice false

set_interface_property avalon_ps2_slave ASSOCIATED_CLOCK clock_reset

add_interface_port avalon_ps2_slave address address Input 1
add_interface_port avalon_ps2_slave chipselect chipselect Input 1
add_interface_port avalon_ps2_slave byteenable byteenable Input 4
add_interface_port avalon_ps2_slave read read Input 1
add_interface_port avalon_ps2_slave write write Input 1
add_interface_port avalon_ps2_slave writedata writedata Input 32
add_interface_port avalon_ps2_slave readdata readdata Output 32
add_interface_port avalon_ps2_slave waitrequest waitrequest Output 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point external_interface
# | 
add_interface external_interface conduit end

set_interface_property external_interface ASSOCIATED_CLOCK clock_reset

add_interface_port external_interface PS2_CLK export Bidir 1
add_interface_port external_interface PS2_DAT export Bidir 1
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point interrupt
# | 
add_interface interrupt interrupt end
set_interface_property interrupt associatedAddressablePoint avalon_ps2_slave

set_interface_property interrupt ASSOCIATED_CLOCK clock_reset

add_interface_port interrupt irq irq Output 1
# | 
# +-----------------------------------

# +-----------------------------------
# | Generation function
# | 
proc generate {} {
	send_message info "Starting Generation of PS2 Controller"

	# get generation settings
	set language [ format "lang=%s" [ get_generation_setting HDL_LANGUAGE ] ]
	set outdir [ format "dir=%s" [ get_generation_setting OUTPUT_DIRECTORY ] ]
	set outname [ format "name=%s" [ get_generation_setting OUTPUT_NAME ] ]


	# get parameter values

	# set top_level_ports and external_port
	set top_level_name [ format "top_level_name=%s" [ get_project_property QUARTUS_PROJECT_NAME ] ]
	set top_level_ports "top_level_ports=PS2_CLK:Bidir:1;PS2_DAT:Bidir:1"
	set module_ports "module_ports=PS2_CLK:Bidir:1:PS2_CLK;PS2_DAT:Bidir:1:PS2_DAT"

	# set arguments
	set files "files=Altera_UP_Avalon_PS2.v;Altera_UP_PS2.v;Altera_UP_PS2_Command_Out.v;Altera_UP_PS2_Data_In.v"
	set params ""
	set sections ""

	# get generation settings
#	set dest_language	[ get_generation_setting HDL_LANGUAGE ]
	set dest_dir 		[ get_generation_setting OUTPUT_DIRECTORY ]
	set dest_name		[ get_generation_setting OUTPUT_NAME ]
	add_file "$dest_dir$dest_name.v" {SYNTHESIS SIMULATION}

	# Generate HDL
	source "UP_IP_Generator.tcl"
	up_generate "$dest_dir$dest_name.v" "hdl/Altera_UP_Avalon_PS2.v" $dest_name $params $sections
	file copy -force "hdl/Altera_UP_PS2.v" $dest_dir
	file copy -force "hdl/Altera_UP_PS2_Command_Out.v" $dest_dir
	file copy -force "hdl/Altera_UP_PS2_Data_In.v" $dest_dir
}
# | 
# +-----------------------------------

